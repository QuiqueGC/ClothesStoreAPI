//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClothesStoreAPI.Models
{
    using ClothesStoreAPI.Utils;
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.SqlClient;
    using System.Threading.Tasks;

    public interface IClothesStoreEntities
    {
        DbSet<Clothes> Clothes { get; set; }
        DbSet<ClothesDeleted> ClothesDeleted { get; set; }
        DbSet<Colors> Colors { get; set; }
        DbSet<Size> Size { get; set; }
        DbEntityEntry Entry(object entity);
        int SaveChanges();
        Task<int> SaveChangesAsync();
        void Dispose();
        Task<String> TryToSaveData();
    }


    public partial class ClothesStoreEntities : DbContext, IClothesStoreEntities
    {
        public ClothesStoreEntities()
            : base("name=ClothesStoreEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clothes> Clothes { get; set; }
        public virtual DbSet<ClothesDeleted> ClothesDeleted { get; set; }
        public virtual DbSet<Colors> Colors { get; set; }
        public virtual DbSet<Size> Size { get; set; }


        DbEntityEntry IClothesStoreEntities.Entry(object entity)
        {
            return this.Entry(entity);
        }

        int IClothesStoreEntities.SaveChanges()
        {
            return this.SaveChanges();
        }

        async Task<int> IClothesStoreEntities.SaveChangesAsync()
        {
            return await this.SaveChangesAsync();
        }

        void IClothesStoreEntities.Dispose()
        {
            this.Dispose();
        }


        async Task<string> IClothesStoreEntities.TryToSaveData()
        {
            string msg = "Success";
            try
            {
                await this.SaveChangesAsync();
            }
            catch (DbUpdateException ex)
            {
                SqlException sqlException = (SqlException)ex.InnerException.InnerException;
                msg = ErrorMessageManager.GetErrorMessage(sqlException);
            }
            return msg;
        }
    }
}
